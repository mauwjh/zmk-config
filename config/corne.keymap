
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | TAB | LWR | SPC |   | ENT | RSE  | BSPC |
                        bindings = <
   &trans &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &trans
   &trans &hm LGUI A &hm LSHFT S &hm LALT D &hm LCTRL F &kp G   &kp H &hm RCTRL J  &hm RALT K     &hm RSHFT L   &hm RGUI SEMI &trans
   &trans &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &trans
                  &kp TAB &mo 1 &kp SPACE   &kp RET &mo 2 &kp BSPC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |
// | BT0 | BT1 | BT2 | BT3 |  BT_CLR  |   |     |     |     |     |     |
//                    | TAB |     | SPC |   | ENT |     | BSPC |
                        bindings = <
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &trans
   &trans &hm LGUI A &hm LSHFT S &hm LALT D &hm LCTRL F &trans   &kp LEFT &hm RCTRL DOWN &hm RALT UP &hm RSHFT RIGHT &hm RGUI SEMI &trans
   &trans &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3       &bt BT_CLR         &trans   &trans   &trans &trans    &kp ESC &trans
                          	        &kp TAB     &trans       &kp SPACE      &kp RET  &trans   &kp BSPC
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |  "  |  `  |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |  '  |  ~  |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans &hm LGUI A   &hm LSHFT S &hm LALT D   &hm LCTRL DQT   &kp GRAVE      &kp MINUS &hm RCTRL EQUAL &hm RALT LBKT        &hm RSHFT RBKT &hm RGUI BSLH &trans
   &trans &trans   &trans &trans   &kp SQT   &kp TILDE      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &trans
                    	     &kp TAB     &trans       &kp SPACE      &kp RET  &trans   &kp BSPC
                        >;
                };
        };
};
